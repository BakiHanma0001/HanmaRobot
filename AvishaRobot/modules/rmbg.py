import os
import aiohttp
import aiofiles
from aiohttp import ContentTypeError
from AvishaRobot import pbot as app
from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

EVAA = [
    [
        InlineKeyboardButton(text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á  ô·¥Ä ô è", url=f"https://t.me/avishaxbot?startgroup=true"),
    ],
]

def check_filename(filroid):
    if os.path.exists(filroid):
        no = 1
        while True:
            ult = "{0}_{2}{1}".format(*os.path.splitext(filroid) + (no,))
            if os.path.exists(ult):
                no += 1
            else:
                return ult
    return filroid

async def RemoveBG(input_file_name):
    headers = {"X-API-Key": "XhJeV21q8Pm1rktJUuUycjr3"}
    files = {"image_file": open(input_file_name, "rb").read()}
    async with aiohttp.ClientSession() as ses:
        async with ses.post(
            "https://api.remove.bg/v1.0/removebg", headers=headers, data=files
        ) as y:
            contentType = y.headers.get("content-type")
            if "image" not in contentType:
                return False, (await y.json())

            name = check_filename("alpha.png")
            file = await aiofiles.open(name, "wb")
            await file.write(await y.read())
            await file.close()
            return True, name


@app.on_message(filters.command("rmbg"))
async def rmbg(bot, message):
  rmbg = await message.reply("üí•") 
  replied = message.reply_to_message
  if not replied:
      return await rmbg.edit("**‚¨§  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á …™·¥õ's  ô·¥Ä·¥Ñ·¥ã…¢ Ä·¥è·¥ú·¥Ö.**")

  if replied.photo:
      photo = await bot.download_media(replied)
      x, y = await RemoveBG(photo)
      os.remove(photo)
      if not x:
          bruh = y["errors"][0]
          details = bruh.get("detail", "")
          return await rmbg.edit(f"**‚¨§ ·¥á Ä Ä·¥è Ä ‚û•** `{bruh['title']}`,\n‚óè {details}")
      await message.reply_photo(photo=y,caption="**‚ùñ  ô·¥Ä·¥Ñ·¥ã…¢ Ä·¥è·¥ú…¥·¥Ö  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö  ô è ‚û• Àπ ·¥Ä·¥†…™s ú·¥Ä Í≠ô  Ä·¥è ô·¥è·¥õ‚Ñ¢ ‚ô°„Çô**", reply_markup=InlineKeyboardMarkup(EVAA),)
      await message.reply_document(document=y)
      await rmbg.delete()
      return os.remove(y)
  await rmbg.edit("**‚¨§  Ä·¥á·¥ò ü è ·¥è…¥ ü è ·¥õ·¥è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á …™·¥õ's  ô·¥Ä·¥Ñ·¥ã…¢ Ä·¥è·¥ú…¥·¥Ö.**")

__mod_name__ = " ô…¢ Ä·¥ç"

__help__ = """

 ‚¨§ /upscale ‚û• ·¥ú·¥òs·¥Ñ·¥Ä ü·¥á  è·¥è·¥ú Ä …™·¥ç…¢.
 ‚¨§ /rmbg ‚û•  Ä·¥á·¥ò ü è ·¥è…¥ ü è ·¥õ·¥è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á …™·¥õ's  ô·¥Ä·¥Ñ·¥ã…¢ Ä·¥è·¥ú…¥·¥Ö.
 ‚¨§ /reverse | pp ‚û• ·¥Ä  Ä·¥á·¥†·¥á Äs·¥á …™·¥ç·¥Ä…¢·¥á s·¥á·¥Ä Ä·¥Ñ ú ·¥è“ì ·¥õ ú·¥á ·¥ç·¥á·¥Ö…™·¥Ä.
 """

